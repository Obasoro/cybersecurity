---
- name: Generate Splunk Config
  template: 
    src: /runner/project/roles/AWS_BASELINE/tasks/templates/firehose_splunk_config.j2
    dest: /runner/project/roles/AWS_BASELINE/tasks/firehose_splunk_config.json

- name: Get Assumed Role Credentials for AWS CLI
  shell: aws sts assume-role --role-arn arn:aws:iam::{{ lookup('env', 'AWS_ACCOUNT_TARGET') }}:role/Sentinal --role-session-name AWSCLI-Session
  register: assumed_role_vars

- set_fact: assumed_role_credentials="{{ assumed_role_vars.stdout|from_json }}"

- name: Create Firehose
  shell: |
    export AWS_ACCESS_KEY_ID={{ assumed_role_credentials.Credentials.AccessKeyId }}
    export AWS_SECRET_ACCESS_KEY={{ assumed_role_credentials.Credentials.SecretAccessKey }}
    export AWS_SESSION_TOKEN={{ assumed_role_credentials.Credentials.SessionToken }}
    if [[ -z `aws firehose list-delivery-streams|grep "cspmfirehose"` ]] ; then aws firehose create-delivery-stream --delivery-stream-name cspmfirehose --delivery-stream-type DirectPut --splunk-destination-configuration file:///runner/project/roles/AWS_BASELINE/tasks/firehose_splunk_config.json --output json | jq -r '.DeliveryStreamARN' ; else aws firehose describe-delivery-stream --delivery-stream-name cspmfirehose --output json | jq -r '.DeliveryStreamDescription.DeliveryStreamARN' ; fi 
  register: firehose

#- name: debug listout
#  debug:
#    msg: "{{ firehose }}"